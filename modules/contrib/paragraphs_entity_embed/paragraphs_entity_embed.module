<?php

/**
 * @file
 * The paragraphs_entity_embed functionality.
 */

use Drupal\ckeditor5\Plugin\CKEditor5PluginDefinition;
use Drupal\Component\Utility\Html;
use Drupal\paragraphs_entity_embed\Plugin\CKEditor5Plugin\DrupalParagraph;

/**
 * Implements hook_entity_type_build().
 *
 * Adds a custom Form Class to Paragraph Embed entities, so we can add custom
 * actions and potentially override normal Entity CRUD operations.
 */
function paragraphs_entity_embed_entity_type_build(array &$entity_types) {
  if (isset($entity_types['embedded_paragraphs'])) {
    $entity_types['embedded_paragraphs']->setFormClass('paragraphs_entity_embed', 'Drupal\paragraphs_entity_embed\Form\ParagraphEmbedDialog');
  }
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * On displaying the Paragraph Embed add/edit forms in iframe hide all page
 * elements except that what is inside the content area.
 */
function paragraphs_entity_embed_preprocess_html(&$variables) {
  if (
    !empty($variables['is_admin']) &&
    in_array(\Drupal::routeMatch()->getRouteName(), [
      'paragraphs_entity_embed.dialog',
      'paragraphs_entity_embed_edit.dialog',
    ])) {
    if (isset($variables['page_top'])) {
      $variables['page_top']['#access'] = FALSE;
    }
    if (isset($variables['page_bottom'])) {
      $variables['page_bottom']['#access'] = FALSE;
    }
    if (isset($variables['page'])) {
      foreach (array_keys($variables['page']) as $key) {
        if (strpos($key, '#') !== 0 && $key !== 'content') {
          $variables['page'][$key]['#access'] = FALSE;
        }
      }
    }
  }
}

/**
 * Implements hook_ckeditor5_plugin_info_alter().
 */
function paragraphs_entity_embed_ckeditor5_plugin_info_alter(array &$plugin_definitions): void {
  if ($plugin_definitions['paragraphs_entity_embed_paragraphsEmbed'] instanceof CKEditor5PluginDefinition) {
    $definitions = $plugin_definitions['paragraphs_entity_embed_paragraphsEmbed']->toArray();
    $paragraph_embed_buttons = DrupalParagraph::loadParagraphEntityEmbedButtons();

    foreach ($paragraph_embed_buttons as $embed_button) {
      $id = $embed_button->id();
      $label = Html::escape($embed_button->label());
      $definitions['drupal']['toolbar_items'][$id] = [
        'id' => $id,
        'label' => $label,
      ];
    }

    $plugin_definitions['paragraphs_entity_embed_paragraphsEmbed'] = new CKEditor5PluginDefinition($definitions);
  }
}

/**
 * Implements hook_ckeditor4to5upgrade_plugin_info_alter().
 */
function paragraphs_entity_embed_ckeditor4to5upgrade_plugin_info_alter(array &$plugin_definitions) {
  $paragraph_embed_buttons = DrupalParagraph::loadParagraphEntityEmbedButtons();

  foreach ($paragraph_embed_buttons as $button) {
    $plugin_definitions['embedded_paragraphs']['cke4_buttons'][] = $button->id();
  }
}
